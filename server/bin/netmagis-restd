#!%TCLSH%

set conf(conffile)	%CONFFILE%
set conf(addr)		0.0.0.0
set conf(port)		8080
set conf(libdir)	%NMLIBDIR%
set conf(files)		{%NMLIBDIR%/www}
set conf(minw)		2
set conf(maxw)		4
set conf(idle)		30
set conf(version)	%VERSION%

set conf(usage) {usage: %s [-h][-d][-f conf][-a addr][-p port][-l libdir][-s files][-m min][-x max][-i idle][-v vers]
    -h: this help message
    -d: debug
    -f conf: path to the configuration file
    -a addr: listening address (e.g. 0.0.0.0)
    -p port: listening port (e.g. 8080)
    -l libdir: path to the libdir (with subdirectories worker/ and pkgtcl/)
    -s spath: list (':' separated) of directories containing static files
    -m min: minimum number of worker threads (e.g. 2)
    -x max: maximum number of worker threads (e.g. 4)
    -i idletime: maximum time in sec before a worker thread exits (e.g. 30)
    -v vers: application version for schema checking (e.g. 3.0.0alpha)
}

proc usage {argv0} {
    global conf

    puts stderr [format $conf(usage) $argv0]
    exit 1
}

proc main {argv0 argv} {
    global conf

    #
    # Argument checking
    #

    set debug    false
    set conffile $conf(conffile)
    set addr     $conf(addr)
    set port     $conf(port)
    set libdir   $conf(libdir)
    set files    $conf(files)
    set minw     $conf(minw)
    set maxw     $conf(maxw)
    set idle     $conf(idle)
    set version  $conf(version)

    while {[llength $argv] > 0} {
	set a [lindex $argv 0]
	switch -glob -- $a {
	    -h {
		usage $argv0
	    }
	    -d {
		set debug true
		set argv [lreplace $argv 0 0]
	    }
	    -f {
		set conffile [lindex $argv 1]
		set argv [lreplace $argv 0 1]
	    }
	    -a {
		set addr [lindex $argv 1]
		set argv [lreplace $argv 0 1]
	    }
	    -p {
		set port [lindex $argv 1]
		set argv [lreplace $argv 0 1]
	    }
	    -l {
		set libdir [lindex $argv 1]
		set argv [lreplace $argv 0 1]
	    }
	    -s {
		set files [split [lindex $argv 1] ":"]
		set argv [lreplace $argv 0 1]
	    }
	    -m {
		set minw [lindex $argv 1]
		set argv [lreplace $argv 0 1]
	    }
	    -x {
		set maxw [lindex $argv 1]
		set argv [lreplace $argv 0 1]
	    }
	    -i {
		set idle [lindex $argv 1]
		set argv [lreplace $argv 0 1]
	    }
	    -v {
		set version [lindex $argv 1]
		set argv [lreplace $argv 0 1]
	    }
	    -* {
		puts stderr "Unknown option '$a'"
		usage $argv0
	    }
	    default {
		break
	    }
	}
    }

    if {[llength $argv] > 0} then {
	usage $argv0
    }

    global auto_path
    lappend auto_path $libdir/pkgtcl
    package require scgi

    ::scgi::start \
	    -debug $debug \
	    -myaddr $addr \
	    -myport $port \
	    -minworkers $minw \
	    -maxworkers $maxw \
	    -idletime $idle \
	    "set conf(conffile) {$conffile}
		    set conf(libdir)  {$libdir}
		    set conf(files)   {$files}
		    set conf(version) {$version}
		    lappend auto_path {$libdir/pkgtcl}
		    source {$libdir/worker/worker.tcl}
		    " \
	    "handle-request"
}

exit [main $argv0 $argv]
